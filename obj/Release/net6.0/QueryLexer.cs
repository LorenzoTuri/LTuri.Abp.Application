//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\loren\Desktop\erp-crm\src\LTuri.Abp.Application\Antlr\Query\Query.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LTuri.Abp.Application.Antlr.Query {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class QueryLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, STRING=26, PROPERTY=27, WS=28;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"STRING", "PROPERTY", "WS"
	};


	public QueryLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'not'", "'('", "')'", "'and'", "'or'", "'eq'", "'ieq'", "'contains'", 
		"'icontains'", "'starts'", "'istarts'", "'ends'", "'iends'", "'gt'", "'igt'", 
		"'lt'", "'ilt'", "'gte'", "'igte'", "'lte'", "'ilte'", "'full'", "'ifull'", 
		"'any'", "'iany'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "STRING", "PROPERTY", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Query.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1E\xCF\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3"+
		"\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\a\x3\a"+
		"\x3\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t"+
		"\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v"+
		"\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r"+
		"\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12"+
		"\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17"+
		"\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19"+
		"\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B"+
		"\a\x1B\xB5\n\x1B\f\x1B\xE\x1B\xB8\v\x1B\x3\x1B\x3\x1B\x3\x1B\a\x1B\xBD"+
		"\n\x1B\f\x1B\xE\x1B\xC0\v\x1B\x3\x1B\x5\x1B\xC3\n\x1B\x3\x1C\x3\x1C\a"+
		"\x1C\xC7\n\x1C\f\x1C\xE\x1C\xCA\v\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x2\x2"+
		"\x2\x1E\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2"+
		"\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11"+
		"!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31"+
		"\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E\x3\x2\a\x3\x2$$\x3"+
		"\x2))\x4\x2\x43\\\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF\xF\""+
		"\"\xD2\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2"+
		"\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2"+
		"\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19"+
		"\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2"+
		"\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)"+
		"\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3"+
		"\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2"+
		"\x39\x3\x2\x2\x2\x3;\x3\x2\x2\x2\x5?\x3\x2\x2\x2\a\x41\x3\x2\x2\x2\t\x43"+
		"\x3\x2\x2\x2\vG\x3\x2\x2\x2\rJ\x3\x2\x2\x2\xFM\x3\x2\x2\x2\x11Q\x3\x2"+
		"\x2\x2\x13Z\x3\x2\x2\x2\x15\x64\x3\x2\x2\x2\x17k\x3\x2\x2\x2\x19s\x3\x2"+
		"\x2\x2\x1Bx\x3\x2\x2\x2\x1D~\x3\x2\x2\x2\x1F\x81\x3\x2\x2\x2!\x85\x3\x2"+
		"\x2\x2#\x88\x3\x2\x2\x2%\x8C\x3\x2\x2\x2\'\x90\x3\x2\x2\x2)\x95\x3\x2"+
		"\x2\x2+\x99\x3\x2\x2\x2-\x9E\x3\x2\x2\x2/\xA3\x3\x2\x2\x2\x31\xA9\x3\x2"+
		"\x2\x2\x33\xAD\x3\x2\x2\x2\x35\xC2\x3\x2\x2\x2\x37\xC4\x3\x2\x2\x2\x39"+
		"\xCB\x3\x2\x2\x2;<\ap\x2\x2<=\aq\x2\x2=>\av\x2\x2>\x4\x3\x2\x2\x2?@\a"+
		"*\x2\x2@\x6\x3\x2\x2\x2\x41\x42\a+\x2\x2\x42\b\x3\x2\x2\x2\x43\x44\a\x63"+
		"\x2\x2\x44\x45\ap\x2\x2\x45\x46\a\x66\x2\x2\x46\n\x3\x2\x2\x2GH\aq\x2"+
		"\x2HI\at\x2\x2I\f\x3\x2\x2\x2JK\ag\x2\x2KL\as\x2\x2L\xE\x3\x2\x2\x2MN"+
		"\ak\x2\x2NO\ag\x2\x2OP\as\x2\x2P\x10\x3\x2\x2\x2QR\a\x65\x2\x2RS\aq\x2"+
		"\x2ST\ap\x2\x2TU\av\x2\x2UV\a\x63\x2\x2VW\ak\x2\x2WX\ap\x2\x2XY\au\x2"+
		"\x2Y\x12\x3\x2\x2\x2Z[\ak\x2\x2[\\\a\x65\x2\x2\\]\aq\x2\x2]^\ap\x2\x2"+
		"^_\av\x2\x2_`\a\x63\x2\x2`\x61\ak\x2\x2\x61\x62\ap\x2\x2\x62\x63\au\x2"+
		"\x2\x63\x14\x3\x2\x2\x2\x64\x65\au\x2\x2\x65\x66\av\x2\x2\x66g\a\x63\x2"+
		"\x2gh\at\x2\x2hi\av\x2\x2ij\au\x2\x2j\x16\x3\x2\x2\x2kl\ak\x2\x2lm\au"+
		"\x2\x2mn\av\x2\x2no\a\x63\x2\x2op\at\x2\x2pq\av\x2\x2qr\au\x2\x2r\x18"+
		"\x3\x2\x2\x2st\ag\x2\x2tu\ap\x2\x2uv\a\x66\x2\x2vw\au\x2\x2w\x1A\x3\x2"+
		"\x2\x2xy\ak\x2\x2yz\ag\x2\x2z{\ap\x2\x2{|\a\x66\x2\x2|}\au\x2\x2}\x1C"+
		"\x3\x2\x2\x2~\x7F\ai\x2\x2\x7F\x80\av\x2\x2\x80\x1E\x3\x2\x2\x2\x81\x82"+
		"\ak\x2\x2\x82\x83\ai\x2\x2\x83\x84\av\x2\x2\x84 \x3\x2\x2\x2\x85\x86\a"+
		"n\x2\x2\x86\x87\av\x2\x2\x87\"\x3\x2\x2\x2\x88\x89\ak\x2\x2\x89\x8A\a"+
		"n\x2\x2\x8A\x8B\av\x2\x2\x8B$\x3\x2\x2\x2\x8C\x8D\ai\x2\x2\x8D\x8E\av"+
		"\x2\x2\x8E\x8F\ag\x2\x2\x8F&\x3\x2\x2\x2\x90\x91\ak\x2\x2\x91\x92\ai\x2"+
		"\x2\x92\x93\av\x2\x2\x93\x94\ag\x2\x2\x94(\x3\x2\x2\x2\x95\x96\an\x2\x2"+
		"\x96\x97\av\x2\x2\x97\x98\ag\x2\x2\x98*\x3\x2\x2\x2\x99\x9A\ak\x2\x2\x9A"+
		"\x9B\an\x2\x2\x9B\x9C\av\x2\x2\x9C\x9D\ag\x2\x2\x9D,\x3\x2\x2\x2\x9E\x9F"+
		"\ah\x2\x2\x9F\xA0\aw\x2\x2\xA0\xA1\an\x2\x2\xA1\xA2\an\x2\x2\xA2.\x3\x2"+
		"\x2\x2\xA3\xA4\ak\x2\x2\xA4\xA5\ah\x2\x2\xA5\xA6\aw\x2\x2\xA6\xA7\an\x2"+
		"\x2\xA7\xA8\an\x2\x2\xA8\x30\x3\x2\x2\x2\xA9\xAA\a\x63\x2\x2\xAA\xAB\a"+
		"p\x2\x2\xAB\xAC\a{\x2\x2\xAC\x32\x3\x2\x2\x2\xAD\xAE\ak\x2\x2\xAE\xAF"+
		"\a\x63\x2\x2\xAF\xB0\ap\x2\x2\xB0\xB1\a{\x2\x2\xB1\x34\x3\x2\x2\x2\xB2"+
		"\xB6\a$\x2\x2\xB3\xB5\n\x2\x2\x2\xB4\xB3\x3\x2\x2\x2\xB5\xB8\x3\x2\x2"+
		"\x2\xB6\xB4\x3\x2\x2\x2\xB6\xB7\x3\x2\x2\x2\xB7\xB9\x3\x2\x2\x2\xB8\xB6"+
		"\x3\x2\x2\x2\xB9\xC3\a$\x2\x2\xBA\xBE\a)\x2\x2\xBB\xBD\n\x3\x2\x2\xBC"+
		"\xBB\x3\x2\x2\x2\xBD\xC0\x3\x2\x2\x2\xBE\xBC\x3\x2\x2\x2\xBE\xBF\x3\x2"+
		"\x2\x2\xBF\xC1\x3\x2\x2\x2\xC0\xBE\x3\x2\x2\x2\xC1\xC3\a)\x2\x2\xC2\xB2"+
		"\x3\x2\x2\x2\xC2\xBA\x3\x2\x2\x2\xC3\x36\x3\x2\x2\x2\xC4\xC8\t\x4\x2\x2"+
		"\xC5\xC7\t\x5\x2\x2\xC6\xC5\x3\x2\x2\x2\xC7\xCA\x3\x2\x2\x2\xC8\xC6\x3"+
		"\x2\x2\x2\xC8\xC9\x3\x2\x2\x2\xC9\x38\x3\x2\x2\x2\xCA\xC8\x3\x2\x2\x2"+
		"\xCB\xCC\t\x6\x2\x2\xCC\xCD\x3\x2\x2\x2\xCD\xCE\b\x1D\x2\x2\xCE:\x3\x2"+
		"\x2\x2\a\x2\xB6\xBE\xC2\xC8\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LTuri.Abp.Application.Antlr.Query
